#!/usr/bin/env python3
"""Process email credentials

Copyright (c) 2018-2019 Thomas Hungenberg

Licensed under GNU Affero General Public License v3.0
<http://www.gnu.org/licenses/agpl-3.0.html>

This script takes a list of email credentials in format
user.name@host.tld:password
as input and returns the IP address of the corresponding
MX with lowest preference (= highest priority), the hostname
of the MX, the email address and the (sanitized) password
in CSV format for each record.

Output is printed to stdout, errors to stderr.
"""

import argparse
import io
import sys
import re
import csv
import os
import irnettools.validate
import irnettools.errors
import irnettools.lookup
import irnettools.progress
from irnettools.io import printerror

if __name__ == '__main__':
    parser = argparse.ArgumentParser(usage='%(prog)s [-cs] <filename>',
                                     description='Process email credentials.')
    parser.add_argument('filename', nargs=1, help='file containing email credentials. Use \'-\' as filename to read from stdin.')
    parser.add_argument('-c', action='store_true', help='do not add CSV header to output')
    parser.add_argument('-p', action='store_true', help='show progress information')
    parser.add_argument('-s', action='store_true', help='sanitize password in output')
    parser.add_argument('-v', '--version', action='version',
                        version='IRNetTools %(prog)s version {}'.format(irnettools.version),
                        help='show the version number and exit')
    args = parser.parse_args()

    try:
        lookup = irnettools.lookup.Lookup()
    except (ImportError, irnettools.errors.ConfigError, irnettools.errors.MaxmindError) as e:
        printerror(str(e))
        exit(1)

    if args.p:
        try:
            progress = irnettools.progress.Progress(args.filename[0])
        except irnettools.errors.ProgressError as e:
            printerror(str(e))
            exit(1)

    if os.name == "nt":
        lt = "\r\n"
    else:
        lt = "\n"
    try:
        with io.open(args.filename[0], 'r', newline='') if args.filename[0] is not "-" else sys.stdin as credfile:
            output = csv.writer(sys.stdout, delimiter=',', lineterminator=lt, quotechar='"', quoting=csv.QUOTE_ALL)
            linenumber = 0
            if not args.c:
                if args.s:
                    output.writerow(["ip","mx","username","sanitized_password"])
                else:
                    output.writerow(["ip","mx","username","password"])
                    
            for line in credfile:
                if args.p:
                    progress.next()
                linenumber += 1

                if re.match("^\s*$", line):
                    # skip lines that are empty or only containing blanks
                    continue

                try:
                    # split record into email address and password
                    m = re.match("^([^@:]+@[^@:]+)(:)([\x20-\x7f]*)$", line.strip())
                    email = m.group(1)
                    pw = m.group(3)
                except:
                    printerror('Invalid record in line %s' % linenumber)
                    continue

                # check if email address is valid
                if not irnettools.validate.email(email):
                    printerror('Invalid email address \'%s\' in line %d.' % (email, linenumber))
                    continue

                emailhostname = email.rsplit('@')[1]
                if args.s:
                    if len(pw) == 0:
                        pw = "********"
                    elif len(pw) == 1:
                        pw = pw[0:1] + "*******"
                    else:
                        pw = pw[0:2] + "******"

                # check if email hostname is a fqdn
                if not irnettools.validate.fqdn(emailhostname):
                    printerror('Not a fully qualified domain name \'%s\' in line %d.' % (emailhostname, linenumber))
                    continue
                
                # get MX for email hostname
                try:
                    mx = lookup.mx(emailhostname)
                except (irnettools.errors.DNSError, irnettools.errors.InvalidHostnameError) as e:
                    printerror(str(e))
                    continue

                if not mx:
                    printerror('No MX for \'%s\'' % emailhostname)
                    continue

                # get IP address for MX
                try:
                    ip = lookup.ip(mx)
                except (irnettools.errors.DNSError, irnettools.errors.InvalidHostnameError) as e:
                    printerror(str(e))
                    continue

                if not ip:
                    printerror('MX hostname \'%s\' does not resolve' % mx)
                    continue

                output.writerow([ip, mx, email, pw])

    except IOError as e:
        printerror('Unable to open input file: %s' % str(e))
        exit(1)

#
