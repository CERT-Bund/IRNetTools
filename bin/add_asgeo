#!/usr/bin/env python3
"""add_asgeo

Copyright (c) 2018-2019 Thomas Hungenberg

Licensed under GNU Affero General Public License v3.0
<http://www.gnu.org/licenses/agpl-3.0.html>

This script takes a CSV file with column "ip" and arbitrary
additional columns as input and returns each row with
AS number, organization and country information for the
respective IP address added.

Output is printed to stdout, errors to stderr.
"""

import argparse
import io
import sys
import re
import csv
import os
import irnettools.validate
import irnettools.errors
import irnettools.lookup
import irnettools.progress
from irnettools.io import printerror

if __name__ == '__main__':
    parser = argparse.ArgumentParser(usage='%(prog)s <filename>',
                                     description='Add ASN, organization and country information for IP addresses to CSV file.')
    parser.add_argument('filename', nargs=1, help='CSV file with column \'ip\'. Use \'-\' as filename to read from stdin.')
    parser.add_argument('-c', action='store_true', help='do not add CSV header to output')
    parser.add_argument('-p', action='store_true', help='show progress information')
    parser.add_argument('-v', '--version', action='version',
                        version='IRNetTools %(prog)s version {}'.format(irnettools.version),
                        help='show the version number and exit')
    args = parser.parse_args()

    try:
        lookup = irnettools.lookup.Lookup()
    except (ImportError, irnettools.errors.ConfigError, irnettools.errors.MaxmindError) as e:
        printerror(str(e))
        exit(1)

    if args.p:
        try:
            progress = irnettools.progress.Progress(args.filename[0])
        except irnettools.errors.ProgressError as e:
            printerror(str(e))
            exit(1)

    if os.name == "nt":
        lt = "\r\n"
    else:
        lt = "\n"
    try:
        with io.open(args.filename[0], 'r', newline='') if args.filename[0] is not "-" else sys.stdin as infile:
            content = csv.reader(infile, delimiter=',', quotechar='"')
            output = csv.writer(sys.stdout, delimiter=',', lineterminator=lt, quotechar='"', quoting=csv.QUOTE_ALL)
            for idx, row in enumerate(content):
                if args.p:
                    progress.next()

                if idx == 0:
                    ipcount = row.count("ip")
                    if ipcount != 1:
                        printerror('No or multiple columns "ip" in input file')
                        exit(1)
                    else:
                        ippos = row.index("ip")
                        if not args.c:
                            output.writerow(row + ['asn', 'org', 'country'])
                else:
                    if not row:
                        # skip empty line in csv input file
                        continue
                    ip = ''
                    asn = ''
                    organization = ''
                    country = ''
                    try:
                        ip = row[ippos]
                    except IndexError:
                        printerror('Invalid data in line %d' % (idx + 1))
                        continue
                    if not ip:
                        printerror('Empty IP in line %d' % (idx + 1))
                    elif not irnettools.validate.ip(ip):
                        printerror('Invalid IP in line %d' % (idx + 1))
                    else:
                        try:
                            asn = lookup.asn(ip)
                        except irnettools.errors.DNSError as e:
                            printerror(str(e))

                        try:
                            organization = lookup.organization(ip)
                        except irnettools.errors.DNSError as e:
                            printerror(str(e))

                        try:
                            country = lookup.country(ip)
                        except irnettools.errors.DNSError as e:
                            printerror(str(e))

                    output.writerow(row + [asn,organization,country])
                
    except IOError as e:
        printerror('Unable to open input file: %s' % str(e))
        exit(1)

#
