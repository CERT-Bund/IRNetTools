#!/usr/bin/env python3
"""add_host_ip

Copyright (c) 2018-2019 Thomas Hungenberg

Licensed under GNU Affero General Public License v3.0
<http://www.gnu.org/licenses/agpl-3.0.html>

This script takes a CSV file with column "hostname" and
arbitrary additional columns as input and returns each row
with the respective IP address added.
Tries to resolve hostname to IPv4 first, then tries IPv6.

Output is printed to stdout, errors to stderr.
"""

import argparse
import io
import sys
import re
import csv
import irnettools.validate
import irnettools.errors
import irnettools.lookup
import irnettools.progress
from irnettools.io import printerror

if __name__ == '__main__':
    parser = argparse.ArgumentParser(usage='%(prog)s <filename>',
                                     description='Add IP addresses for hostnames to CSV file.')
    parser.add_argument('filename', nargs=1, help='CSV file with column \'hostname\'. Use \'-\' as filename to read from stdin.')
    parser.add_argument('-c', action='store_true', help='do not add CSV header to output')
    parser.add_argument('-p', action='store_true', help='show progress information')
    parser.add_argument('-v', '--version', action='version',
                        version='IRNetTools %(prog)s version {}'.format(irnettools.version),
                        help='show the version number and exit')
    args = parser.parse_args()

    try:
        lookup = irnettools.lookup.Lookup()
    except (ImportError, irnettools.errors.ConfigError, irnettools.errors.MaxmindError) as e:
        printerror(str(e))
        exit(1)

    if args.p:
        try:
            progress = irnettools.progress.Progress(args.filename[0])
        except irnettools.errors.ProgressError as e:
            printerror(str(e))
            exit(1)

    try:
        with io.open(args.filename[0], 'r') if args.filename[0] is not "-" else sys.stdin as infile:
            content = csv.reader(infile, delimiter=',', quotechar='"')
            output = csv.writer(sys.stdout, delimiter=',', quotechar='"', quoting=csv.QUOTE_ALL)
            for idx, row in enumerate(content):
                if args.p:
                    progress.next()

                if idx == 0:
                    hostnamecount = row.count("hostname")
                    if hostnamecount != 1:
                        printerror('No or multiple columns "hostname" in input file')
                        exit(1)
                    else:
                        hostnamepos = row.index("hostname")
                        if not args.c:
                            output.writerow(['ip'] + row)
                else:
                    if not row:
                        # skip empty line in csv input file
                        continue

                    ip = ''
                    try:
                        hostname = row[hostnamepos]
                    except IndexError:
                        printerror('Invalid data in line %d' % (idx + 1))
                        continue
                    if not hostname:
                        printerror('Empty hostname in line %d' % (idx + 1))
                    elif irnettools.validate.ip(hostname):
                        ip = hostname
                        printerror('Hostname already is an IP address in line %d' % (idx + 1))
                    elif not irnettools.validate.hostname(hostname):
                        printerror('Invalid hostname in line %d' % (idx + 1))
                    else:
                        try:
                            ip = lookup.ip(hostname)
                        except irnettools.errors.DNSError as e:
                            printerror('Error: %s' % str(e))
                        if not ip:
                            printerror('Hostname does not resolve: %s' % hostname)

                    output.writerow([ip] + row)

    except IOError as e:
        printerror('Unable to open input file: %s' % str(e))
        exit(1)

#
