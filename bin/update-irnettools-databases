#! /bin/bash
PATH=/bin:/usr/bin

# Location of databases (e.g. Maxmind)
# If not set, defaults to USER_BASE/share/irnettools/databases/
#DATABASES="~/irnettools-databases"

# Maxmind license key
# Since 2019-12-30, a license key is required for downloading Maxmind's GeoLite2 databases
# See <https://blog.maxmind.com/2019/12/18/significant-changes-to-accessing-and-using-geolite2-databases/>
MAXMIND_LICENSE_KEY="xxxxxxxx"

###################################
### NO USER CONFIGURATION BELOW ###
###################################

MAXMIND_COUNTRY_URL="https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz"
MAXMIND_ASN_URL="https://geolite.maxmind.com/download/geoip/database/GeoLite2-ASN.tar.gz"

MAXMIND_COUNTRY_URL="https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-Country&license_key=${MAXMIND_LICENSE_KEY}&suffix=tar.gz"
MAXMIND_ASN_URL="https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-ASN&license_key=${MAXMIND_LICENSE_KEY}&suffix=tar.gz"

abspath()
{
    [ "$#" -eq 1 ] || fail "No path given"
    echo $(cd $(dirname $1); pwd)/$(basename $1)
}

fail()
{
    echo >&2 "$@"
    [ -d "$TMP_DIR" ] && rm -rf "$TMP_DIR"
    exit 1
}

if [ $MAXMIND_LICENSE_KEY == "xxxxxxxx" ]; then
    fail "Please set your Maxmind license key in $0"
fi

if [ -z "$DATABASES" ]; then
    # DATABASES not defined, use default
    PY_USER_BASE=$(python -c 'import site; print(site.USER_BASE)')
    [ -z "$PY_USER_BASE" ] && fail "Error: Could not determine Python USER_BASE"
    DB_PATH="${PY_USER_BASE}/share/irnettools/databases"
else
    DB_PATH=`echo $DATABASES | sed -e "s|^~/|$HOME/|"`
fi

# Check if wget or curl installed
if [ `which wget >/dev/null 2>&1; echo $?` -eq 0 ]; then
    WGET=1
else
    WGET=0
    if [ `which curl >/dev/null 2>&1; echo $?` -gt 0 ]; then
        fail "Neither wget nor curl found. Please install one of them."
    fi
fi

MM_DIR="${DB_PATH}/maxmind"
MAXMIND_COUNTRY_FILE="${MM_DIR}/GeoLite2-Country.mmdb"
MAXMIND_ASN_FILE="${MM_DIR}/GeoLite2-ASN.mmdb"

TMP_DIR=`mktemp -d`
[ -d "$MM_DIR" ] || mkdir -p "$MM_DIR"

echo "Updating databases in $DB_PATH"
echo "Updating Maxmind GeoLite2 Country database."
if [ -n "$WGET" ]; then
    wget -q -O "$TMP_DIR/country.tgz" "$MAXMIND_COUNTRY_URL"
else
    curl -s -O "$TMP_DIR/country.tgz" "$MAXMIND_COUNTRY_URL"
fi
[ $? -gt 0 ] && fail "Downloading database failed."
tar mxzf "$TMP_DIR/country.tgz" -C "$TMP_DIR/" >/dev/null 2>&1
[ $? -gt 0 ] && fail "Unpacking database failed."
FILENAME=`find "$TMP_DIR/" -name GeoLite2-Country.mmdb`
if [ -n "$FILENAME" ]; then
    mv -f "$FILENAME" "$MAXMIND_COUNTRY_FILE"
else
    fail "Country database file not found in downloaded archive."
fi

echo "Updating Maxmind GeoLite2 ASN database."
if [ -n "$WGET" ]; then
    wget -q -O "$TMP_DIR/asn.tgz" "$MAXMIND_ASN_URL"
else
    curl -s -O "$TMP_DIR/asn.tgz" "$MAXMIND_ASN_URL"
fi
[ $? -gt 0 ] && fail "Downloading database failed."
tar mxzf "$TMP_DIR/asn.tgz" -C "$TMP_DIR/" >/dev/null 2>&1
[ $? -gt 0 ] && fail "Unpacking database failed."
FILENAME=`find "$TMP_DIR/" -name GeoLite2-ASN.mmdb`
if [ -n "$FILENAME" ]; then
    mv -f "$FILENAME" "$MAXMIND_ASN_FILE"
else
    fail "ASN database file not found in downloaded archive."
fi

rm -rf "$TMP_DIR"
#
